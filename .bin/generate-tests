#!/usr/bin/env node
const fs = require('fs-extra');
const log = require('signale');
const path = require('path');
const paths = require('./helpers/paths');
const exec = require('./helpers/exec');

const createTestTemplate = (
  classname
) => `import ${classname} from '../${classname}';

describe('${classname}', () => {
  it('needs tests', () => {
    expect(${classname}).toBeDefined();
  });
});
`;

const main = async () => {
  const string = await exec(
    `find ${paths.src} -type f -path '**/src/**' -name '*.js' -or -name '*.ts' ! -path "**/node_modules/**" ! -name '*.spec.*' ! -name '*.test.*'`
  );
  const files = string.split('\n');
  files
    .map((file) => {
      const basename = path.basename(file);
      const dirname = path.dirname(file);
      const extension = path.extname(file);
      const extrgx = new RegExp(`${extension}$`);
      const classname = basename.replace(extrgx, '');

      const testpath = path
        .join(dirname, '__tests__', basename)
        .replace(extrgx, `.spec${extension}`);
      return { file, testpath, basename, classname };
    })
    .filter(
      ({ testpath, classname }) =>
        !fs.existsSync(testpath) && classname !== 'index'
    )
    .forEach(async ({ classname, testpath }) => {
      const template = createTestTemplate(classname);
      await fs.ensureFile(testpath);
      await fs.writeFile(testpath, template, 'utf8');
      log.success(`Created ${path.relative(paths.ROOT, testpath)}`);
    });
};

main().catch(log.error);
