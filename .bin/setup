#!/usr/bin/env node
const fs = require('fs');
const path = require('path');
const log = require('signale');
const exec = require('./helpers/exec');
const paths = require('./helpers/paths');
const pkg = require('../package.json');

const installDeps = async () => {
  const nodeModulesPath = path.join(paths.ROOT, 'node_modules');
  if (!fs.existsSync(nodeModulesPath)) {
    log.info('Installing node modules');
    await exec('npm ci');
    log.success('Node dependencies installed');
  }
};

const getGithubUser = async () => {
  const output = await exec('git config --get remote.origin.url');
  return output
    .trim()
    .replace('git@github.com:', '')
    .replace('https://github.com/', '')
    .replace('.git', '')
    .split('/')[0];
};

const getNewValues = async () => {
  const authorName = await exec('git config --get user.name');
  const authorEmail = await exec('git config --get user.email');
  const name = path.basename(paths.ROOT);
  const description = 'My awesome node app!';
  const version = '1.0.0';
  const ghUser = await getGithubUser();
  return {
    authorName,
    authorEmail,
    name,
    description,
    version,
    ghUser,
  };
};

const findAndReplace = (filename, oldValues, newValues) => {
  const abspath = path.resolve(__dirname, filename);
  const content = fs.readFileSync(abspath, 'utf8');
  let newContent = content;
  Object.entries(oldValues).forEach(([key, oldValue]) => {
    const newValue = newValues[key] || oldValue;
    if (newValue !== oldValue) {
      newContent = content.replace(new RegExp(oldValue, 'g'), newValue);
    }
  });
  fs.writeFileSync(abspath, newContent, 'utf8');
  console.log(`Updated ${filename}`);
};

const getMarkdownFiles = () =>
  fs.readdirSync(paths.ROOT).filter((filename) => filename.endsWith('.md'));

const getJSONFiles = () =>
  fs.readdirSync(paths.ROOT).filter((filename) => filename.endsWith('.json'));

const getDocsFiles = () =>
  fs.readdirSync(paths.ROOT).filter((filename) => filename.endsWith('.html'));

const main = async () => {
  await installDeps();
  const files = [...getJSONFiles(), ...getMarkdownFiles(), ...getDocsFiles()];
  const oldValues = {
    authorName: 'Erik Nielsen',
    authorEmail: 'erik@312development.com',
    name: pkg.name,
    description: pkg.description,
    version: pkg.version,
    ghUser: 'nielse63',
  };
  const newValues = await getNewValues();
  files.forEach((file) => {
    findAndReplace(file, oldValues, newValues);
  });
};

main()
  .then(() => {
    log.success('Setup complete');
  })
  .catch((error) => {
    log.error('An error occurred during setup');
    console.error(error);
    process.exit(1);
  });
